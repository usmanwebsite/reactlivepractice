{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\practice\\\\src\\\\User.jsx\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\n\n// const User = ( {match} ) => {\n//  return (\n//     <h1> It is a { match.params.fname} {match.params.lname} user page </h1>\n//  );\n//  };\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst User = () => {\n  _s();\n  const {\n    fname,\n    lname\n  } = useParams();\n  const location = useLocation;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: [\" It is a \", fname, \" \", lname, \" user page \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 8\n  }, this);\n};\n_s(User, \"TIMihAuSLnZcCT78VAiiRGF+W4Q=\", false, function () {\n  return [useParams];\n});\n_c = User;\nexport default User;\nvar _c;\n$RefreshReg$(_c, \"User\");","map":{"version":3,"names":["React","useParams","useLocation","User","fname","lname","location"],"sources":["D:/reactPractice/practice/src/User.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n// const User = ( {match} ) => {\r\n//  return (\r\n//     <h1> It is a { match.params.fname} {match.params.lname} user page </h1>\r\n//  );\r\n//  };\r\n const User = () => {\r\n    const {fname, lname} = useParams();\r\n    const location = useLocation\r\n    return (\r\n       <h1> It is a {fname} {lname} user page </h1>\r\n    );\r\n  };\r\nexport default User;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,WAAW,QAAQ,kBAAkB;;AAE9C;AACA;AACA;AACA;AACA;AAAA;AACC,MAAMC,IAAI,GAAG,MAAM;EAAA;EAChB,MAAM;IAACC,KAAK;IAAEC;EAAK,CAAC,GAAGJ,SAAS,EAAE;EAClC,MAAMK,QAAQ,GAAGJ,WAAW;EAC5B,oBACG;IAAA,wBAAcE,KAAK,OAAGC,KAAK;EAAA;IAAA;IAAA;IAAA;EAAA,QAAiB;AAEjD,CAAC;AAAC,GANGF,IAAI;EAAA,QACgBF,SAAS;AAAA;AAAA,KAD7BE,IAAI;AAOX,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}