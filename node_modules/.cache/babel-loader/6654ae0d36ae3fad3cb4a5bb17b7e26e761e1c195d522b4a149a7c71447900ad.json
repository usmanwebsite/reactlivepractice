{"ast":null,"code":"var _jsxFileName = \"D:\\\\reactPractice\\\\practice\\\\src\\\\index.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport Phool from './Phool.jsx';\nimport Tower from './Tower.jsx';\nimport Array from './Array.jsx';\nimport Div from './Div.jsx';\nimport App from './App.jsx';\nimport Bootstrap from './Bootstrap.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst favs = \"Phool\";\n\n/* const Fav=() =>{\n if(favs== \"Phool\"){\n\n   return <Phool />;\n }\n else{\n    return <Tower />;\n  }\n} \nconst bama = \"bamaModaabad\";\nconst array1 = ['asdf' ,'qwerty' , 'poiuy'];\nconst array2 = [1, ...array1, 'Jataka', ...bama];\n\n  console.log(array1);\n  console.log(array2);\n/* Separate Operator (...(Name of object) )\nconst dataName = {\n namess : 'Rana Suleman',\n property : 'Wada Tappo'\n};\nconst bioName ={\n  id : 1,\n  ...dataName,\n  chaair : 'chakki',\n  gender : 'male'\n};\nconsole.log(dataName);\nconsole.log(bioName);\n*/\n\ncreateRoot(document.getElementById('root')).render( /*#__PURE__*/_jsxDEV(_Fragment, {\n  children: /*#__PURE__*/_jsxDEV(Bootstrap, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 2\n  }, this)\n}, void 0, false)\n//  document.getElementById(\"root\")\n);","map":{"version":3,"names":["React","ReactDOM","Phool","Tower","Array","Div","App","Bootstrap","favs","createRoot","document","getElementById","render"],"sources":["D:/reactPractice/practice/src/index.js"],"sourcesContent":["\n import React  from 'react';\nimport ReactDOM from 'react-dom';\nimport Phool from './Phool.jsx';\nimport Tower from './Tower.jsx';\nimport Array from './Array.jsx';\nimport Div from './Div.jsx';\nimport App from './App.jsx';\nimport Bootstrap from './Bootstrap.jsx';\n\n const favs = \"Phool\";\n\n \n /* const Fav=() =>{\n  if(favs== \"Phool\"){\n \n    return <Phool />;\n  }\n  else{\n\n    return <Tower />;\n\n  }\n } \n const bama = \"bamaModaabad\";\n const array1 = ['asdf' ,'qwerty' , 'poiuy'];\n const array2 = [1, ...array1, 'Jataka', ...bama];\n \n   console.log(array1);\n   console.log(array2);\n\n/* Separate Operator (...(Name of object) )\n const dataName = {\n  namess : 'Rana Suleman',\n  property : 'Wada Tappo'\n};\n\nconst bioName ={\n   id : 1,\n   ...dataName,\n   chaair : 'chakki',\n   gender : 'male'\n};\n console.log(dataName);\n console.log(bioName);\n*/\n\n\n createRoot(document.getElementById('root')).render(\n<>\n\n {/*<Favs />*/}\n {/*(favs == \"Tower\")? <Phool /> : <Tower />*/}\n\n\n {/*<Div />*/}\n \n <Bootstrap />\n\n\n</>,\n//  document.getElementById(\"root\")\n\n);\n\n"],"mappings":";AACC,OAAOA,KAAK,MAAO,OAAO;AAC3B,OAAOC,QAAQ,MAAM,WAAW;AAChC,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,KAAK,MAAM,aAAa;AAC/B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,GAAG,MAAM,WAAW;AAC3B,OAAOC,SAAS,MAAM,iBAAiB;AAAC;AAAA;AAEvC,MAAMC,IAAI,GAAG,OAAO;;AAGpB;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOCC,UAAU,CAACC,QAAQ,CAACC,cAAc,CAAC,MAAM,CAAC,CAAC,CAACC,MAAM,eACnD;EAAA,uBAQC,QAAC,SAAS;IAAA;IAAA;IAAA;EAAA;AAAG;AAId;AAAA,CAEC"},"metadata":{},"sourceType":"module","externalDependencies":[]}